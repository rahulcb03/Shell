Testing: mysh.c
                                                            Functionality Testing:
Batch Mode: 
1) Testing that batch mode is able to correctly read from the file provided and exucte the commands listed 
   Test: Created a file called "testBatch.txt". 
         The file "testbatch.txt" contains the content: "echo "Hello World"
                                                         ls
                                                         mkdir testdir
                                                         cd testdir
                                                         pwd"
          Ran the command "./mysh testbatch.txt"
          Expected output: Prints "Hello World" in the command line, then lists all the content in current directory, 
          makes a directory called "testdir", changes director to "testdir", prints content of "/testdir"

Interactive Mode: 
1) bare / ">" - Testing Redirection of output along with the bare function "ls"
                Test: Created a file called "test.txt", which has no content written in it. 
                      Ran the commands "./mysh", "ls > test.txt", and then checked the content of "test.txt"
                      Expected output: "test.txt" contains the content in the current directory

2) bare / "<" - Testing redirection of inputalong with the bare function "sort"
                Test: Created a file called "sort.txt" which has the the content: "bar
                                                                                   apple
                                                                                   card
                                                                                   zoo
                                                                                   horse
                                                                                   zop
                                                                                   astrology"
                      Ran the commands "./mysh", "sort < sort.txt"
                      Expected output: the Following should be printed to the console: "apple
                                                                                        astrology
                                                                                        bar
                                                                                        card
                                                                                        horse
                                                                                        zoo
                                                                                        zop"                                                                      

3) bare / "|" - Testing redirection of output to file along with the bare function "ls & grep"
                Test: Created a files called "myfile.txt" and "myfile" which have no content written in them. 
                Ran the commands "./mysh", "ls | grep myfile"
                Expected output: A list of all files that contain the string "myfile" will be outputted to the user. 

4) bare / "*" - Testing Wild Card functionality along with the bare function "cat"
                Test: Created files called "test1.txt", which has the content "Hello" written in it, and "test2.txt", which has the content "World" written in it.
                Ran the command "./mysh", "cat *.txt"
                Expected output: A the contents of "test1.txt" and "test2.txt" should be displayed on the terminal like so: "Hello
                                                                                                                             World"
  
5) "cd" - Testing if the change directory function works
          Test: Created a directory called "testDir" and then created a file "test.txt" within the directory
          Ran the commands "./mysh", "cd testDir", and then "ls"
          Expected output: The contents of "testDir" should be printed to the console like so: "test.txt"

6) "pwd" - Testing if the print workign directory function works 
           Test: Created a directory called "testDir" and then created the files "test1.txt" and "test2.txt within the directory 
           (no contents written in either)
           Ran the commands "./mysh", "cd testDir" and then "pwd"
           Expected output: The contents of "testDir" should be printed to the console like so: "[Home Path]/testDir"

7) "exit" - Testing if the exit key word exits program
            Test: Ran the command "./mysh", "exit"
            Expected output: The prompt "mysh: exiting" should be printed and then the program should terminate 

8) ~ - Testing to see if the user is redirecred to the home directory 
       Test: Create a sub-directory called "testDir" and then navigate into the directory and create a file called "test.txt" (no content written)
       Run the commands "./mysh","cd testDir", "ls", "cd ~", and then "ls"
       Expected output: The program should redirect to the "testDir" directory and the print out the contents of that directory like so: "test.txt". 
       Then it should go back to the home directory and print the contents of the home directory. 
 
                                                                Other Cases: 
Batch Mode: 

1) Prompting user - Testing to make sure that the program will take appropriate response to user input
                    Test: Created a file called "testBatch.txt" which contains the content: " echo "Enter your age:\n"
                                                                                              read age
                                                                                              echo $age "
                    Expected output: The program should print an error to the console and terminate the program 
                 
Interactive Mode:

1) "*" / "|" / bear - Testing to see if hte program is able to use wild cards in tandem with pipe
                      Test: Create the files "hi.txt", "bye.txt", "try.txt" and "hello.txt" (all have no content written in them)
                      Run the commands "./mysh" and then "ls *.txt | grep hello"
                      Expected output: The program should first list all the files that have the ".txt" extension and then pipe the output to the grep                         
                      search bear function. Then grep should search for the files that match the string "hello" and the output to terminal should be like                       
                      so: "hello.txt"

2) "<" / "*" / bare- Testing to see if input can be redirected with tandem with wild card
                     Test: Create the files "hi.txt", with the content "hi" written in it; "car.txt", with the content "car" written in it; and
                     "mic.txt",with the content "mic" written in it
                     Run the commands "./mysh" and "cat < *.txt"
                     Expected output: The program should redirect the contents of all files with the ".txt" extension to the cat bear function. The
                     output to the terminal should be like so: "hi
                                                                car
                                                                mic"

3) "|" / "|" / bare- Testing to see if the program is able to use mulitple pipes
                     Test: Create a file called "input.txt" with the text "apples are apples when the applets say apple"
                     Run the commands "./mysh" and then "cat input.txt | grep "apple" | wc -l | sort"
                     Expected output: The program should display the contents of "input.txt" via cat and then filer the content
                     by the key word "apple" and then count the number of lines using wc -l and then finally should sort the outputs using "sort".
                     The resulting output should be outputted to the terminal: "1"

4) ">" / ">" / bare-  Testing to see if the program is able to redirect output mulitple times 
                      Test: Create the files "output1.txt" and "output2.txt" (all have no content written in them)
                      Run the commands "./mysh" and "echo "hello" > output1.txt > output2.txt" 
                      Expected output: The program should redirect "hello" to "output1.txt" and then to "output2.txt". The file "output2.txt" should 
                      contain the phrase "hello". 

